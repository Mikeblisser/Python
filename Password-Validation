import re
import functools
import gzip
import re
from difflib import SequenceMatcher
from pathlib import Path

from django.conf import settings
from django.core.exceptions import (
    FieldDoesNotExist, ImproperlyConfigured, ValidationError,
)
from django.utils.functional import lazy
from django.utils.html import format_html, format_html_join
from django.utils.module_loading import import_string
from django.utils.translation import gettext as _, ngettext


class CustomPasswordValidator:
    """
    Validate whether the password has 1 Uppercase, lowercase, special and numeric character.
    """
    def validate(self, password, user=None):
        regex = re.compile('[@_!#$%^&*()<>?/\|}{~:]')
      
        # Pass the string in search 
        # method of regex object.    
        if(regex.search(password) == None):
            raise ValidationError(
                _("This password should alteast contain 1 special character."),
                code='password_without_special_letter',
            )

        if not any(char.isdigit() for char in password):
            raise ValidationError(
                _("This password should alteast contain 1 numeric character."),
                code='password_without_numeric_letter',
            )

        if not any(char.isupper() for char in password):
            raise ValidationError(
                _("This password should alteast contain 1 uppercase character."),
                code='password_without_uppercase_letter',
            )

        if not any(char.islower() for char in password):
            raise ValidationError(
                _("This password should alteast contain 1 lowercase character."),
                code='password_without_uppercase_letter',
            )

    def get_help_text(self):
        return _('Your password must contain at least 1 uppercase, lowercase, special and numeric character.')
